package ldev.com.agenda.api.controller;

import java.util.List;
import java.util.Optional;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import io.swagger.v3.oas.annotations.parameters.RequestBody;
import jakarta.validation.Valid;
import ldev.com.agenda.api.mapper.AgendaMapper;
import ldev.com.agenda.api.request.AgendaRequest;
import ldev.com.agenda.api.response.AgendaResponse;
import ldev.com.agenda.domain.entity.Agenda;
import ldev.com.agenda.domain.service.AgendaService;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@RestController
@RequestMapping("/agenda")
public class AgendaController {

	private final AgendaService service = new AgendaService();
	private final AgendaMapper mapper = new AgendaMapper();

	@GetMapping
	public ResponseEntity<List<AgendaResponse>> buscarTodos() {
		List<Agenda> agendas = service.listarTodos();
		List<AgendaResponse> agendaResponses = mapper.toAgendaResponseList(agendas);

		return ResponseEntity.status(HttpStatus.OK).body(agendaResponses);
	}

	@GetMapping("/{id}")
	public ResponseEntity<AgendaResponse> buscarPorId(@PathVariable Long id) {
		Optional<Agenda> optAgenda = service.buscarPorId(id);

		if (optAgenda.isEmpty()) {
			return ResponseEntity.notFound().build();
		}

		AgendaResponse agendaResponse = mapper.toAgendaResponse(optAgenda.get());

		return ResponseEntity.status(HttpStatus.OK).body(agendaResponse);
	}

	@PostMapping
	public ResponseEntity<AgendaResponse> salvar(@Valid @RequestBody AgendaRequest request) {
		Agenda agenda = mapper.toAgenda(request);
		Agenda agendaSalva = service.salvar(agenda);
		AgendaResponse agendaResponse = mapper.toAgendaResponse(agendaSalva);
		return ResponseEntity.status(HttpStatus.CREATED).body(agendaResponse);
	}
}